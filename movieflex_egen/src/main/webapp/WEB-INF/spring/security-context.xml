<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:component-scan base-package="com.spring.movieflex"></context:component-scan>

<!-- 	<security:http auto-config="false" use-expressions="true">
	<security:form-login login-page="/login" login-processing-url="/login" />
	<security:csrf disabled="true"/>
			<security:intercept-url pattern="/movies/*"
			access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/createmovie/*"
			access="hasAuthority('ADMIN')" />
		<security:intercept-url pattern="/**"
			access="permitAll" />
	</security:http> -->
	
<!-- 	<security:authentication-manager>
	<security:authentication-provider>
	<security:jdbc-user-service data-source-ref="dataSource"
		users-by-username-query="select email,password,role from user where email=?" />
	</security:authentication-provider>
	</security:authentication-manager> -->
	
</beans>
